{"version":3,"sources":["App.js","index.js"],"names":["Search","setTitle","onChange","event","target","value","type","id","placeholder","Results","title","page","setNominated","nominated","setPage","useState","data","setData","loading","setLoading","error","setError","useEffect","length","fetch","then","response","json","catch","JSON","stringify","Response","map","Title","Year","Button","onClick","arr","variant","name","imdbID","Nominated","movie","filter","e","App","Container","Row","Col","ReactDOM","render","document","getElementById"],"mappings":"6QAOA,SAASA,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SAKhB,OACE,8BACE,uBACEC,SAPW,SAACC,GAChBF,EAASE,EAAMC,OAAOC,QAOlBC,KAAK,OACLC,GAAG,YACHC,YAAY,kBAMpB,SAASC,EAAT,GAAqE,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QAAW,EAC1CC,mBAAS,MADiC,mBAC3DC,EAD2D,KACrDC,EADqD,OAEpCF,oBAAS,GAF2B,mBAE3DG,EAF2D,KAElDC,EAFkD,OAGxCJ,mBAAS,MAH+B,mBAG3DK,EAH2D,KAGpDC,EAHoD,KAmBlE,OAdAC,qBAAU,WACHZ,GACDA,EAAMa,QAAU,IAClBJ,GAAW,GACXK,MAAM,8BAAD,OAC2Bd,EAD3B,4CACoEC,IAEtEc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,KAAKR,GACLQ,MAAK,kBAAMN,GAAW,MACtBS,MAAMP,MAEV,CAACV,EAAMD,IAENA,EAAMa,OAAS,EACV,qFAELL,EAAgB,2CAEhBE,EAAc,8BAAMS,KAAKC,UAAUV,EAAO,KAAM,KAE/CJ,EAEiB,UAAlBA,EAAKe,SAA6B,gDAGpC,gCACE,6BACGf,EAAKhB,OAAOgC,KAAI,SAAChB,GAAD,OACf,+BACGA,EAAKiB,MADR,MACkBjB,EAAKkB,KACrB,cAACC,EAAA,EAAD,CACEC,QAAS,kBAAMxB,EAAa,CAAEyB,IAAI,GAAD,mBAAMxB,EAAUwB,KAAhB,CAAqBrB,OACtDsB,QAAQ,OACRC,KAAK,SACLlC,MAAOW,EAAKwB,OAJd,wBAFOxB,EAAKwB,aAalB,cAACL,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,EAAQH,EAAO,IAAtC,0BArBc,KA0BpB,SAAS8B,EAAT,GAAiD,IAA5B5B,EAA2B,EAA3BA,UAAWD,EAAgB,EAAhBA,aAC9B,OACE,8BACE,6BACGC,EAAUwB,IAAIL,KAAI,SAACU,GAAD,OACjB,+BACGA,EAAMT,MACP,cAACE,EAAA,EAAD,CACEC,QAAS,kBACPxB,EAAa,CAAEyB,IAAKxB,EAAUwB,IAAIM,QAAO,SAACC,GAAD,OAAOA,IAAMF,QAExDJ,QAAQ,OACRjC,MAAOqC,EAAMF,OALf,sBAFOE,EAAMF,eAkDVK,MAhCf,WAAgB,IAAD,EACa9B,mBAAS,IADtB,mBACNL,EADM,KACCT,EADD,OAEWc,mBAAS,GAFpB,mBAENJ,EAFM,KAEAG,EAFA,OAGqBC,mBAAS,CAAEsB,IAAK,KAHrC,mBAGNxB,EAHM,KAGKD,EAHL,KAKb,OACE,mCACE,eAACkC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAChD,EAAD,CAAQC,SAAUA,QAGtB,eAAC8C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACvC,EAAD,CACEC,MAAOA,EACPC,KAAMA,EACNG,QAASA,EACTF,aAAcA,EACdC,UAAWA,MAGf,cAACmC,EAAA,EAAD,UACE,cAACP,EAAD,CAAW5B,UAAWA,EAAWD,aAAcA,e,MCrH3DqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0eafd84b.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\n// import Container from \"react-bootstrap/lib/Container\";\nimport { Container, Col, Row } from \"react-bootstrap\";\n// import Row from \"react-bootstrap/Row\";\n\nfunction Search({ setTitle }) {\n  const onChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  return (\n    <div>\n      <input\n        onChange={onChange}\n        type=\"text\"\n        id=\"textInput\"\n        placeholder=\"Movie Title\"\n      />\n    </div>\n  );\n}\n\nfunction Results({ title, page, setNominated, nominated, setPage }) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!title) return;\n    if (title.length >= 3) {\n      setLoading(true);\n      fetch(\n        `https://www.omdbapi.com/?s=${title}&apikey=b29472dd&type=movie&page=${page}`\n      )\n        .then((response) => response.json())\n        .then(setData)\n        .then(() => setLoading(false))\n        .catch(setError);\n    }\n  }, [page, title]);\n\n  if (title.length < 3)\n    return <p>Please enter a search query of at least 3 characters</p>;\n\n  if (loading) return <p>Loading...</p>;\n\n  if (error) return <pre>{JSON.stringify(error, null, 2)}</pre>;\n\n  if (!data) return null;\n\n  if (data.Response === \"False\") return <p>Movie Not Found</p>;\n\n  return (\n    <div>\n      <ul>\n        {data.Search.map((data) => (\n          <li key={data.imdbID}>\n            {data.Title} - {data.Year}\n            <Button\n              onClick={() => setNominated({ arr: [...nominated.arr, data] })}\n              variant=\"dark\"\n              name=\"imdbID\"\n              value={data.imdbID}\n            >\n              Nominate\n            </Button>\n          </li>\n        ))}\n      </ul>\n      <Button onClick={() => setPage(page + 1)}>Next Page</Button>\n    </div>\n  );\n}\n\nfunction Nominated({ nominated, setNominated }) {\n  return (\n    <div>\n      <ul>\n        {nominated.arr.map((movie) => (\n          <li key={movie.imdbID}>\n            {movie.Title}\n            <Button\n              onClick={() =>\n                setNominated({ arr: nominated.arr.filter((e) => e !== movie) })\n              }\n              variant=\"dark\"\n              value={movie.imdbID}\n            >\n              Remove\n            </Button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction App() {\n  const [title, setTitle] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [nominated, setNominated] = useState({ arr: [] });\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col>\n            <Search setTitle={setTitle} />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Results\n              title={title}\n              page={page}\n              setPage={setPage}\n              setNominated={setNominated}\n              nominated={nominated}\n            />\n          </Col>\n          <Col>\n            <Nominated nominated={nominated} setNominated={setNominated} />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}