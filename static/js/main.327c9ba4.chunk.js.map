{"version":3,"sources":["App.js","index.js"],"names":["Search","setTitle","onChange","event","target","value","type","id","placeholder","className","style","width","Results","title","page","setNominated","nominated","setPage","useState","data","setData","loading","setLoading","error","setError","useEffect","length","fetch","then","response","json","catch","JSON","stringify","Response","ListGroup","map","Item","Row","Col","md","Button","onClick","list","variant","size","name","imdbID","Title","Year","textAlign","Nominated","movie","filter","e","App","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.327c9ba4.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\n// import Container from \"react-bootstrap/lib/Container\";\nimport {\n  Container,\n  Col,\n  Row,\n  ListGroup,\n  // Form,\n  // FormControl,\n} from \"react-bootstrap\";\n// import Row from \"react-bootstrap/Row\";\n\nfunction Search({ setTitle }) {\n  const onChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  return (\n    <div>\n      <h5>Movie title</h5>\n      <input\n        onChange={onChange}\n        type=\"text\"\n        id=\"textInput\"\n        placeholder=\"Search\"\n        className=\"w-100 p-3\"\n        style={{ width: \"100%\" }}\n        // className=\"mr-sm-2\"\n      />\n    </div>\n  );\n}\n\nfunction Results({ title, page, setNominated, nominated, setPage }) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!title) return;\n    if (title.length >= 3) {\n      setLoading(true);\n      fetch(\n        `https://www.omdbapi.com/?s=${title}&apikey=b29472dd&type=movie&page=${page}`\n      )\n        .then((response) => response.json())\n        .then(setData)\n        .then(() => setLoading(false))\n        .catch(setError);\n    }\n  }, [page, title]);\n\n  if (title.length < 3)\n    return <h5>Please search with at least 3 characters</h5>;\n\n  if (loading) return <h5>Loading...</h5>;\n\n  if (error) return <pre>{JSON.stringify(error, null, 2)}</pre>;\n\n  if (!data) return null;\n\n  if (data.Response === \"False\") return <h5>No results for \"{title}\"</h5>;\n\n  return (\n    <>\n      <h5>Results for \"{title}\"</h5>\n      <ListGroup className=\"list-unstyled\">\n        {data.Search.map((data) => (\n          <ListGroup.Item key={data.imdbID}>\n            {/* <Container> */}\n            <Row className=\"align-items-center\">\n              <Col md=\"auto\">\n                <Button\n                  onClick={() =>\n                    setNominated({ list: [...nominated.list, data] })\n                  }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                  name=\"imdbID\"\n                  value={data.imdbID}\n                >\n                  Nominate\n                </Button>\n              </Col>\n              <Col>\n                {data.Title} ({data.Year})\n              </Col>\n            </Row>\n            {/* </Container> */}\n          </ListGroup.Item>\n        ))}\n        <ListGroup.Item>\n          <Row>\n            <Col style={{ textAlign: \"center\" }}>\n              <Button\n                style={{ textAlign: \"center\" }}\n                size=\"sm\"\n                variant=\"outline-secondary\"\n                onClick={() => setPage(page + 1)}\n              >\n                Next Page\n              </Button>\n            </Col>\n          </Row>\n        </ListGroup.Item>\n      </ListGroup>\n    </>\n  );\n}\n\nfunction Nominated({ nominated, setNominated }) {\n  return (\n    <>\n      <h5>Nominations</h5>\n      <ListGroup className=\"list-unstyled\">\n        {nominated.list.map((movie) => (\n          <ListGroup.Item key={movie.imdbID}>\n            <Row className=\"align-items-center\">\n              <Col md=\"auto\">\n                <Button\n                  onClick={() =>\n                    setNominated({\n                      list: nominated.list.filter((e) => e !== movie),\n                    })\n                  }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                  name=\"imdbID\"\n                  value={movie.imdbID}\n                >\n                  Remove\n                </Button>\n              </Col>\n              <Col>\n                {movie.Title} ({movie.Year})\n              </Col>\n            </Row>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    </>\n  );\n}\n\nfunction App() {\n  const [title, setTitle] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [nominated, setNominated] = useState({ list: [] });\n\n  return (\n    <>\n      <Container className=\"bg-light\">\n        <Row className=\"py-5\">\n          <Col>\n            <h2>The Shoppies</h2>\n            <Search setTitle={setTitle} />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Results\n              title={title}\n              page={page}\n              setPage={setPage}\n              setNominated={setNominated}\n              nominated={nominated}\n            />\n          </Col>\n          {/* <div className=\"d-lg-none w-100\"></div> */}\n          <Col>\n            <Nominated nominated={nominated} setNominated={setNominated} />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}