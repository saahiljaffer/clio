{"version":3,"sources":["Search.js","Functions.js","Results.js","Nominated.js","App.js","index.js"],"names":["Search","setTitle","setPage","Card","Header","Body","onChange","event","target","value","type","id","placeholder","className","style","width","imageHelper","imageUrl","ResultsPagination","page","data","items","push","Pagination","First","disabled","onClick","Prev","firstPage","Math","max","maxPage","ceil","totalResults","lastPage","min","number","Item","active","Next","Last","ResultsList","nominated","setNominated","ListGroup","variant","map","Row","Col","sm","Button","list","length","find","element","imdbID","size","name","Image","src","Poster","alt","height","rounded","Title","Year","Results","title","useState","setData","loading","setLoading","error","setError","useEffect","fetch","then","response","json","catch","console","log","JSON","stringify","Response","padding","Footer","NominatedList","movie","filter","Nominated","minHeight","App","saved","parse","localStorage","getItem","setItem","document","body","Container","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6a60d85c.chunk.js","sourcesContent":["import { Card } from \"react-bootstrap\";\r\n\r\nexport function Search({ setTitle, setPage }) {\r\n  // Set page to 1 for new search queries\r\n  const onChange = (event) => {\r\n    setTitle(event.target.value);\r\n    setPage(1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        {/* Title */}\r\n        <Card.Header>\r\n          <h5>Movie Title</h5>\r\n        </Card.Header>\r\n        {/* Search Bar */}\r\n        <Card.Body>\r\n          <input\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            id=\"textInput\"\r\n            placeholder=\"Please search with 3+ characters...\"\r\n            className=\"w-100 p-3\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","export function imageHelper(imageUrl) {\r\n  if (imageUrl === \"N/A\") {\r\n    return \"https://saahiljaffer.com/omdb/white.jpeg\";\r\n  }\r\n  return imageUrl;\r\n}\r\n","import {\r\n  Pagination,\r\n  ListGroup,\r\n  Col,\r\n  Image,\r\n  Row,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { imageHelper } from \"./Functions.js\";\r\n\r\n//Pagination for results page\r\nfunction ResultsPagination({ page, setPage, data }) {\r\n  //Initialize array\r\n  let items = [];\r\n  //First and previous buttons\r\n  items.push(\r\n    <Pagination.First\r\n      key=\"first\"\r\n      disabled={page === 1}\r\n      onClick={() => setPage(1)}\r\n    />\r\n  );\r\n  items.push(\r\n    <Pagination.Prev\r\n      key=\"previous\"\r\n      disabled={page === 1}\r\n      onClick={() => setPage(page - 1)}\r\n    />\r\n  );\r\n  //Calculate page numbers\r\n  var firstPage = Math.max(page - 2, 1);\r\n  var maxPage = Math.ceil(data.totalResults / 10);\r\n  var lastPage = Math.min(maxPage, firstPage + 4);\r\n  if (firstPage >= 2 && lastPage - page === 1) {\r\n    firstPage -= 1;\r\n  } else if (firstPage >= 3 && lastPage - page === 0) {\r\n    firstPage -= 2;\r\n  }\r\n  //Dynamically create numbered page buttons\r\n  for (let number = firstPage; number <= lastPage; number++) {\r\n    items.push(\r\n      <Pagination.Item\r\n        className=\"text-secondary\"\r\n        onClick={() => setPage(number)}\r\n        key={number}\r\n        active={number === page}\r\n      >\r\n        {number}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n  //Next and last buttons\r\n  items.push(\r\n    <Pagination.Next\r\n      key=\"next\"\r\n      disabled={page === maxPage}\r\n      onClick={() => setPage(page + 1)}\r\n    />\r\n  );\r\n  items.push(\r\n    <Pagination.Last\r\n      key=\"last\"\r\n      disabled={page === maxPage}\r\n      onClick={() => setPage(maxPage)}\r\n    />\r\n  );\r\n  return <Pagination>{items}</Pagination>;\r\n}\r\n\r\n//List of search results\r\nfunction ResultsList({ data, nominated, setNominated }) {\r\n  return (\r\n    <ListGroup variant=\"flush\">\r\n      {data.Search.map((data) => (\r\n        <ListGroup.Item key={data.imdbID}>\r\n          <Row className=\"align-items-center\">\r\n            {/* Nominate Buttons */}\r\n            <Col className=\"px-2\" sm=\"auto\" style={{ width: \"auto\" }}>\r\n              <Button\r\n                // Add to list if list has space\r\n                onClick={() => {\r\n                  if (nominated.list.length < 5) {\r\n                    setNominated({ list: [...nominated.list, data] });\r\n                  }\r\n                }}\r\n                // Disabled if on list or if list is full\r\n                disabled={\r\n                  nominated.list.find(\r\n                    (element) => element.imdbID === data.imdbID\r\n                  ) || nominated.list.length >= 5\r\n                }\r\n                variant=\"secondary\"\r\n                size=\"sm\"\r\n                name=\"nominate\"\r\n                value={data}\r\n              >\r\n                Nominate\r\n              </Button>\r\n            </Col>\r\n            {/* Movie Poster */}\r\n            <Col className=\"px-2\" sm=\"auto\" style={{ width: \"auto\" }}>\r\n              <Image\r\n                src={imageHelper(data.Poster)}\r\n                alt=\"\"\r\n                style={{ height: \"40px\", width: \"27px\" }}\r\n                rounded\r\n              />\r\n            </Col>\r\n            {/* Movie Information */}\r\n            <Col className=\"px-2\">\r\n              {data.Title} ({data.Year})\r\n            </Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n}\r\n\r\nexport function Results({ title, page, setNominated, nominated, setPage }) {\r\n  //Initialize Variables\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  //API call\r\n  useEffect(() => {\r\n    if (!title) return;\r\n    if (title.length >= 3) {\r\n      setLoading(true);\r\n      fetch(\r\n        `https://www.omdbapi.com/?s=${title}&apikey=b29472dd&type=movie&page=${page}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then(setData)\r\n        .then(() => setLoading(false))\r\n        .catch(setError);\r\n    }\r\n  }, [page, title]);\r\n  //Only search once search query is at least 3 characters\r\n  if (title.length < 3)\r\n    return (\r\n      <Card.Header>\r\n        <h5>Results</h5>\r\n      </Card.Header>\r\n    );\r\n  //Loading message\r\n  if (loading)\r\n    return (\r\n      <Card.Header>\r\n        <h5>Loading...</h5>\r\n      </Card.Header>\r\n    );\r\n  //Error Message\r\n  if (error) {\r\n    console.log(JSON.stringify(error, null, 2));\r\n    return (\r\n      <Card.Header>\r\n        <h5>Error! Please contact saahil.jaffer@uwaterloo.ca</h5>\r\n      </Card.Header>\r\n    );\r\n  }\r\n  //Fallback for lack of data\r\n  if (!data) return null;\r\n  //Fallback for no results\r\n  if (data.Response === \"False\")\r\n    return (\r\n      <Card.Header>\r\n        <h5>No results for \"{title}\"</h5>\r\n      </Card.Header>\r\n    );\r\n  return (\r\n    <div>\r\n      <Card.Header>\r\n        <Card.Title>Results for \"{title}\"</Card.Title>\r\n      </Card.Header>\r\n      <Card.Body style={{ padding: \"0\" }}>\r\n        <ResultsList\r\n          data={data}\r\n          nominated={nominated}\r\n          setNominated={setNominated}\r\n        />\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Row className=\"justify-content-center\">\r\n          <ResultsPagination page={page} setPage={setPage} data={data} />\r\n        </Row>\r\n      </Card.Footer>\r\n    </div>\r\n  );\r\n}\r\n","import { ListGroup, Card, Row, Col, Button, Image } from \"react-bootstrap\";\r\nimport { imageHelper } from \"./Functions.js\";\r\n\r\nfunction NominatedList({ nominated, setNominated }) {\r\n  return (\r\n    <ListGroup variant=\"flush\">\r\n      {nominated.list.map((movie) => (\r\n        <ListGroup.Item key={movie.imdbID}>\r\n          <Row className=\"align-items-center\">\r\n            {/* Button */}\r\n            <Col className=\"px-2\" sm=\"auto\" style={{ width: \"auto\" }}>\r\n              <Button\r\n                onClick={() =>\r\n                  setNominated({\r\n                    list: nominated.list.filter(\r\n                      (element) => element.imdbID !== movie.imdbID\r\n                    ),\r\n                  })\r\n                }\r\n                variant=\"secondary\"\r\n                size=\"sm\"\r\n                name=\"remove\"\r\n                value={movie.imdbID}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </Col>\r\n            {/* Movie Poster */}\r\n            <Col className=\"px-2\" sm=\"auto\" style={{ width: \"auto\" }}>\r\n              <Image\r\n                src={imageHelper(movie.Poster)}\r\n                alt=\"\"\r\n                style={{ height: \"40px\", width: \"27px\" }}\r\n                rounded\r\n              />\r\n            </Col>\r\n            {/* Movie Information */}\r\n            <Col className=\"px-2\">\r\n              {movie.Title} ({movie.Year})\r\n            </Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n}\r\n\r\nexport function Nominated({ nominated, setNominated }) {\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header>\r\n          <h5>Nominations</h5>\r\n        </Card.Header>\r\n        <Card.Body style={{ minHeight: \"0\", padding: \"0\" }}>\r\n          <NominatedList nominated={nominated} setNominated={setNominated} />\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Container, Col, Row, Card } from \"react-bootstrap\";\r\nimport { Search } from \"./Search.js\";\r\nimport { Results } from \"./Results.js\";\r\nimport { Nominated } from \"./Nominated.js\";\r\n\r\nfunction App() {\r\n  //Initialize Variables\r\n  const [title, setTitle] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  //Retrieve nominated list from local storage\r\n  const saved = JSON.parse(localStorage.getItem(\"nominated\"));\r\n  const [nominated, setNominated] = useState(saved || { list: [] });\r\n  //Update local storage when nominated list changes\r\n  useEffect(() => {\r\n    localStorage.setItem(\"nominated\", JSON.stringify(nominated));\r\n  }, [nominated]);\r\n  //Change background colour\r\n  document.body.style = \"background: #E9E9EC;\";\r\n  //Base app\r\n  return (\r\n    <>\r\n      <Container>\r\n        {/* Search */}\r\n        <Row>\r\n          <Col className=\"py-3\">\r\n            <h2>The Shoppies</h2>\r\n            <Search setTitle={setTitle} setPage={setPage} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {/* Results */}\r\n          <Col className=\"py-3\">\r\n            <Card className=\"w-100\">\r\n              <Results\r\n                title={title}\r\n                page={page}\r\n                setPage={setPage}\r\n                setNominated={setNominated}\r\n                nominated={nominated}\r\n              />\r\n            </Card>\r\n          </Col>\r\n          {/* For responsiveness */}\r\n          <div className=\"d-md-none w-100\"></div>\r\n          {/* Nominated List */}\r\n          <Col className=\"py-3\">\r\n            <Nominated nominated={nominated} setNominated={setNominated} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}