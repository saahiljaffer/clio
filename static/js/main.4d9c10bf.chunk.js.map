{"version":3,"sources":["App.js","index.js"],"names":["Search","setTitle","setPage","onChange","event","target","value","type","id","placeholder","className","style","width","Results","title","page","setNominated","nominated","useState","data","setData","loading","setLoading","error","setError","useEffect","length","fetch","then","response","json","catch","JSON","stringify","Response","Card","minHeight","Header","Title","Body","padding","ListGroup","variant","map","Item","action","Row","Col","md","Button","onClick","list","disabled","includes","size","name","Year","imdbID","Footer","textAlign","totalResults","Nominated","movie","filter","e","App","document","body","Container","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4d9c10bf.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport {\n  Container,\n  Col,\n  Row,\n  ListGroup,\n  Card,\n  CardGroup,\n} from \"react-bootstrap\";\n\nfunction Search({ setTitle, setPage }) {\n  const onChange = (event) => {\n    setTitle(event.target.value);\n    setPage(1);\n  };\n\n  return (\n    <div>\n      <h5>Movie Title</h5>\n      <input\n        onChange={onChange}\n        type=\"text\"\n        id=\"textInput\"\n        placeholder=\"Please enter a search query with 3+ characters\"\n        className=\"w-100 p-3\"\n        style={{ width: \"100%\" }}\n      />\n    </div>\n  );\n}\n\nfunction Results({ title, page, setNominated, nominated, setPage }) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!title) return;\n    if (title.length >= 3) {\n      setLoading(true);\n      fetch(\n        `https://www.omdbapi.com/?s=${title}&apikey=b29472dd&type=movie&page=${page}`\n      )\n        .then((response) => response.json())\n        .then(setData)\n        .then(() => setLoading(false))\n        .catch(setError);\n    }\n  }, [page, title]);\n\n  if (title.length < 3) return <h5>Results</h5>;\n\n  if (loading) return <h5>Loading...</h5>;\n\n  if (error) return <pre>{JSON.stringify(error, null, 2)}</pre>;\n\n  if (!data) return null;\n\n  if (data.Response === \"False\") return <h5>No results for \"{title}\"</h5>;\n\n  return (\n    <div>\n      <Card style={{ minHeight: \"800px\" }} className=\"w-100\">\n        <Card.Header>\n          <Card.Title>Results for \"{title}\"</Card.Title>\n        </Card.Header>\n        <Card.Body style={{ padding: \"0\" }}>\n          <ListGroup variant=\"flush\">\n            {data.Search.map((data) => (\n              <ListGroup.Item action variant=\"light\" key={data.imdbID}>\n                <Row className=\"align-items-center\">\n                  <Col md=\"auto\">\n                    <Button\n                      onClick={() => {\n                        if (nominated.list.length < 5) {\n                          setNominated({ list: [...nominated.list, data] });\n                        }\n                      }}\n                      disabled={\n                        nominated.list.includes(data) ||\n                        nominated.list.length >= 5\n                      }\n                      variant=\"secondary\"\n                      size=\"sm\"\n                      name=\"nominate\"\n                      value={data}\n                    >\n                      Nominate\n                    </Button>\n                  </Col>\n                  <Col>\n                    {data.Title} ({data.Year})\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Card.Body>\n\n        <Card.Footer>\n          <Row>\n            <Col style={{ textAlign: \"center\" }}>\n              <Button\n                style={{ textAlign: \"center\" }}\n                size=\"sm\"\n                variant=\"secondary\"\n                disabled={page >= data.totalResults / 10}\n                onClick={() => setPage(page + 1)}\n              >\n                Next Page\n              </Button>\n            </Col>\n          </Row>\n        </Card.Footer>\n      </Card>\n    </div>\n  );\n}\n\nfunction Nominated({ nominated, setNominated }) {\n  return (\n    <>\n      <Card style={{ minHeight: \"800px\" }}>\n        <Card.Header>\n          <h5>Nominations</h5>\n        </Card.Header>\n        <Card.Body style={{ padding: \"0\" }}>\n          <ListGroup variant=\"flush\">\n            {nominated.list.map((movie) => (\n              <ListGroup.Item action variant=\"light\" key={movie.imdbID}>\n                <Row className=\"align-items-center\">\n                  <Col md=\"auto\">\n                    <Button\n                      onClick={() =>\n                        setNominated({\n                          list: nominated.list.filter((e) => e !== movie),\n                        })\n                      }\n                      variant=\"secondary\"\n                      size=\"sm\"\n                      name=\"remove\"\n                      value={movie.imdbID}\n                    >\n                      Remove\n                    </Button>\n                  </Col>\n                  <Col>\n                    {movie.Title} ({movie.Year})\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Card.Body>\n        <Card.Footer>\n          <Row>\n            <Col style={{ textAlign: \"center\" }}>\n              <Button\n                style={{ textAlign: \"center\" }}\n                size=\"sm\"\n                variant=\"secondary\"\n                disabled\n              >\n                Placeholder\n              </Button>\n            </Col>\n          </Row>\n        </Card.Footer>\n      </Card>\n    </>\n  );\n}\n\nfunction App() {\n  const [title, setTitle] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [nominated, setNominated] = useState({ list: [] });\n\n  document.body.style = \"background: #E9E9EC;\";\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col className=\"py-3\">\n            <h2>The Shoppies</h2>\n            <Search setTitle={setTitle} setPage={setPage} />\n          </Col>\n        </Row>\n        <Row className=\"py-3\">\n          {/* <CardGroup className=\"w-100\"> */}\n          <Col>\n            {/* TODO: think about using cards */}\n            <Results\n              title={title}\n              page={page}\n              setPage={setPage}\n              setNominated={setNominated}\n              nominated={nominated}\n            />\n          </Col>\n          {/* <div className=\"d-lg-none w-100\"></div> */}\n          <Col>\n            <Nominated nominated={nominated} setNominated={setNominated} />\n          </Col>\n          {/* </CardGroup> */}\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}