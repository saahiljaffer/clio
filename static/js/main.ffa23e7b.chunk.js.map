{"version":3,"sources":["App.js","index.js"],"names":["Search","setTitle","onChange","event","target","value","type","id","placeholder","Results","title","page","updateNominated","useState","data","setData","loading","setLoading","error","setError","nominate","arr","length","useEffect","fetch","then","response","json","catch","JSON","stringify","console","log","Response","map","Title","Year","Button","onClick","variant","imdbID","Nominated","nominated","remove","movie","App","ReactDOM","render","document","getElementById"],"mappings":"mPAIA,SAASA,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SAKhB,OACE,8BACE,uBACEC,SAPW,SAACC,GAChBF,EAASE,EAAMC,OAAOC,QAOlBC,KAAK,OACLC,GAAG,YACHC,YAAY,kBAMpB,SAASC,EAAT,GAAoD,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,gBAAmB,EACzBC,mBAAS,MADgB,mBAC1CC,EAD0C,KACpCC,EADoC,OAEnBF,oBAAS,GAFU,mBAE1CG,EAF0C,KAEjCC,EAFiC,OAGvBJ,mBAAS,MAHc,mBAG1CK,EAH0C,KAGnCC,EAHmC,KAK3CC,EAAW,SAACjB,GACLA,EAAMC,OAAOC,MACxBO,GAAgB,SAACS,GAAD,4BAAaA,GAAb,WAAqBA,EAAIC,cAiB3C,OAdAC,qBAAU,WACHb,GACDA,EAAMY,QAAU,IAClBL,GAAW,GACXO,MAAM,8BAAD,OAC2Bd,EAD3B,4CACoEC,IAEtEc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,KAAKV,GACLU,MAAK,kBAAMR,GAAW,MACtBW,MAAMT,MAEV,CAACR,EAAMD,IAENA,EAAMY,OAAS,EACV,qFAELN,EAAgB,2CAEhBE,EAAc,8BAAMW,KAAKC,UAAUZ,EAAO,KAAM,KAE/CJ,GAELiB,QAAQC,IAAIlB,GAEU,UAAlBA,EAAKmB,SAA6B,gDAGpC,8BACE,6BACGnB,EAAKd,OAAOkC,KAAI,SAACpB,GAAD,OACf,+BACGA,EAAKqB,MADR,MACkBrB,EAAKsB,KACrB,cAACC,EAAA,EAAD,CAAQC,QAASlB,EAAUmB,QAAQ,OAAOlC,MAAOS,EAAK0B,OAAtD,wBAFO1B,EAAK0B,gBAVJ,KAsBpB,SAASC,EAAT,GAAmC,IAAdC,EAAa,EAAbA,UACbC,EAAS,SAACxC,GACd4B,QAAQC,IAAI7B,EAAMC,OAAOC,QAG3B,OACE,8BACE,6BACGqC,EAAUR,KAAI,SAACU,GAAD,OACb,+BACGA,EAAMT,MADT,MACmBS,EAAMR,KACvB,cAACC,EAAA,EAAD,CAAQC,QAASK,EAAQJ,QAAQ,OAAOlC,MAAOuC,EAAMJ,OAArD,wBAFOI,UA0BJC,MAdf,WAAgB,IAAD,EACahC,mBAAS,IADtB,mBACNH,EADM,KACCT,EADD,OAEWY,mBAAS,GAFpB,mBAENF,EAFM,aAGwBE,mBAAS,KAHjC,mBAGN6B,EAHM,KAGK9B,EAHL,KAKb,OACE,qCACE,cAACZ,EAAD,CAAQC,SAAUA,IAClB,cAACQ,EAAD,CAASC,MAAOA,EAAOC,KAAMA,EAAMC,gBAAiBA,IACpD,cAAC6B,EAAD,CAAWC,UAAWA,Q,MClG5BI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ffa23e7b.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Search({ setTitle }) {\n  const onChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  return (\n    <div>\n      <input\n        onChange={onChange}\n        type=\"text\"\n        id=\"textInput\"\n        placeholder=\"Movie Title\"\n      />\n    </div>\n  );\n}\n\nfunction Results({ title, page, updateNominated }) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const nominate = (event) => {\n    var data = event.target.value;\n    updateNominated((arr) => [...arr, `${arr.length}`]);\n  };\n\n  useEffect(() => {\n    if (!title) return;\n    if (title.length >= 3) {\n      setLoading(true);\n      fetch(\n        `https://www.omdbapi.com/?s=${title}&apikey=b29472dd&type=movie&page=${page}`\n      )\n        .then((response) => response.json())\n        .then(setData)\n        .then(() => setLoading(false))\n        .catch(setError);\n    }\n  }, [page, title]);\n\n  if (title.length < 3)\n    return <p>Please enter a search query of at least 3 characters</p>;\n\n  if (loading) return <p>Loading...</p>;\n\n  if (error) return <pre>{JSON.stringify(error, null, 2)}</pre>;\n\n  if (!data) return null;\n\n  console.log(data);\n\n  if (data.Response === \"False\") return <p>Movie Not Found</p>;\n\n  return (\n    <div>\n      <ul>\n        {data.Search.map((data) => (\n          <li key={data.imdbID}>\n            {data.Title} - {data.Year}\n            <Button onClick={nominate} variant=\"dark\" value={data.imdbID}>\n              Nominate\n            </Button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction Nominated({ nominated }) {\n  const remove = (event) => {\n    console.log(event.target.value);\n  };\n\n  return (\n    <div>\n      <ul>\n        {nominated.map((movie) => (\n          <li key={movie}>\n            {movie.Title} - {movie.Year}\n            <Button onClick={remove} variant=\"dark\" value={movie.imdbID}>\n              Nominate\n            </Button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction App() {\n  const [title, setTitle] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [nominated, updateNominated] = useState([]);\n\n  return (\n    <>\n      <Search setTitle={setTitle} />\n      <Results title={title} page={page} updateNominated={updateNominated} />\n      <Nominated nominated={nominated} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}