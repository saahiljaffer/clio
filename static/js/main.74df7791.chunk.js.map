{"version":3,"sources":["App.js","index.js"],"names":["Search","setTitle","onChange","event","target","value","type","id","placeholder","Results","title","page","setNominated","nominated","setPage","useState","data","setData","loading","setLoading","error","setError","useEffect","length","fetch","then","response","json","catch","JSON","stringify","Response","ListGroup","className","map","Item","Container","Row","style","alignItems","Col","md","Button","onClick","arr","variant","size","name","imdbID","Title","Year","display","justifyContent","Nominated","movie","filter","e","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74df7791.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\n// import Container from \"react-bootstrap/lib/Container\";\nimport { Container, Col, Row, ListGroup, ListGroupItem } from \"react-bootstrap\";\n// import Row from \"react-bootstrap/Row\";\n\nfunction Search({ setTitle }) {\n  const onChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  return (\n    <div>\n      <input\n        onChange={onChange}\n        type=\"text\"\n        id=\"textInput\"\n        placeholder=\"Movie Title\"\n      />\n    </div>\n  );\n}\n\nfunction Results({ title, page, setNominated, nominated, setPage }) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!title) return;\n    if (title.length >= 3) {\n      setLoading(true);\n      fetch(\n        `https://www.omdbapi.com/?s=${title}&apikey=b29472dd&type=movie&page=${page}`\n      )\n        .then((response) => response.json())\n        .then(setData)\n        .then(() => setLoading(false))\n        .catch(setError);\n    }\n  }, [page, title]);\n\n  if (title.length < 3)\n    return <p>Please enter a search query of at least 3 characters</p>;\n\n  if (loading) return <p>Loading...</p>;\n\n  if (error) return <pre>{JSON.stringify(error, null, 2)}</pre>;\n\n  if (!data) return null;\n\n  if (data.Response === \"False\") return <p>Movie Not Found</p>;\n\n  return (\n    <>\n      <ListGroup className=\"list-unstyled\">\n        {data.Search.map((data) => (\n          <ListGroup.Item key={data.imdbID}>\n            <Container>\n              <Row style={{ alignItems: \"center\" }}>\n                <Col md=\"auto\">\n                  <Button\n                    onClick={() =>\n                      setNominated({ arr: [...nominated.arr, data] })\n                    }\n                    variant=\"outline-secondary\"\n                    size=\"sm\"\n                    name=\"imdbID\"\n                    value={data.imdbID}\n                  >\n                    Nominate\n                  </Button>\n                </Col>\n                <Col>\n                  {data.Title} ({data.Year})\n                </Col>\n              </Row>\n            </Container>\n          </ListGroup.Item>\n        ))}\n        <ListGroup.Item>\n          <Container>\n            <Row>\n              <Col style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <Button\n                  size=\"sm\"\n                  variant=\"outline-secondary\"\n                  onClick={() => setPage(page + 1)}\n                >\n                  Next Page\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </ListGroup.Item>\n      </ListGroup>\n    </>\n  );\n}\n\nfunction Nominated({ nominated, setNominated }) {\n  return (\n    <>\n      <ListGroup className=\"list-unstyled\">\n        {nominated.arr.map((movie) => (\n          <ListGroup.Item key={movie.imdbID}>\n            <Container>\n              <Row>\n                <Col md=\"auto\">\n                  <Button\n                    className=\"align-middle\"\n                    onClick={() =>\n                      setNominated({\n                        arr: nominated.arr.filter((e) => e !== movie),\n                      })\n                    }\n                    variant=\"outline-secondary\"\n                    size=\"sm\"\n                    name=\"imdbID\"\n                    value={movie.imdbID}\n                  >\n                    Remove\n                  </Button>\n                </Col>\n                <Col>\n                  {movie.Title} ({movie.Year})\n                </Col>\n              </Row>\n            </Container>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    </>\n  );\n}\n\nfunction App() {\n  const [title, setTitle] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [nominated, setNominated] = useState({ arr: [] });\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col>\n            <Search setTitle={setTitle} />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Results\n              title={title}\n              page={page}\n              setPage={setPage}\n              setNominated={setNominated}\n              nominated={nominated}\n            />\n          </Col>\n          <Col>\n            <Nominated nominated={nominated} setNominated={setNominated} />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}