{"version":3,"sources":["App.js","index.js"],"names":["Search","setTitle","onChange","event","target","value","type","id","placeholder","Results","title","useState","data","setData","loading","setLoading","error","setError","useEffect","fetch","then","response","json","catch","JSON","stringify","console","log","Response","map","Title","Year","imdbID","App","ReactDOM","render","document","getElementById"],"mappings":"mOAGA,SAASA,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SAKhB,OACE,8BACE,uBACEC,SAPW,SAACC,GAChBF,EAASE,EAAMC,OAAOC,QAOlBC,KAAK,OACLC,GAAG,YACHC,YAAY,kBAMpB,SAASC,EAAT,GAA6B,IAAVC,EAAS,EAATA,MAAS,EACFC,mBAAS,MADP,mBACnBC,EADmB,KACbC,EADa,OAEIF,oBAAS,GAFb,mBAEnBG,EAFmB,KAEVC,EAFU,OAGAJ,mBAAS,MAHT,mBAGnBK,EAHmB,KAGZC,EAHY,KAe1B,OAVAC,qBAAU,WACHR,IACLK,GAAW,GACXI,MAAM,6BAAD,OAA8BT,EAA9B,gCACFU,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,KAAKP,GACLO,MAAK,kBAAML,GAAW,MACtBQ,MAAMN,MACR,CAACP,IAEAI,EAAgB,2CAEhBE,EAAc,8BAAMQ,KAAKC,UAAUT,EAAO,KAAM,KAE/CJ,GAELc,QAAQC,IAAIf,GAEU,UAAlBA,EAAKgB,SAA6B,gDAGpC,8BACE,6BACGhB,EAAKZ,OAAO6B,KAAI,SAACjB,GAAD,OACf,+BACGA,EAAKkB,MADR,MACkBlB,EAAKmB,OADdnB,EAAKoB,gBAVJ,KA8BLC,MAXf,WAAgB,IAAD,EACatB,mBAAS,IADtB,mBACND,EADM,KACCT,EADD,KAGb,OACE,qCACE,cAACD,EAAD,CAAQC,SAAUA,IAClB,cAACQ,EAAD,CAASC,MAAOA,Q,MC1DtBwB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7d3aa2d8.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction Search({ setTitle }) {\n  const onChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  return (\n    <div>\n      <input\n        onChange={onChange}\n        type=\"text\"\n        id=\"textInput\"\n        placeholder=\"Movie Title\"\n      />\n    </div>\n  );\n}\n\nfunction Results({ title }) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!title) return;\n    setLoading(true);\n    fetch(`http://www.omdbapi.com/?s=${title}&apikey=b29472dd&type=movie`)\n      .then((response) => response.json())\n      .then(setData)\n      .then(() => setLoading(false))\n      .catch(setError);\n  }, [title]);\n\n  if (loading) return <p>Loading...</p>;\n\n  if (error) return <pre>{JSON.stringify(error, null, 2)}</pre>;\n\n  if (!data) return null;\n\n  console.log(data);\n\n  if (data.Response === \"False\") return <p>Movie Not Found</p>;\n\n  return (\n    <div>\n      <ul>\n        {data.Search.map((data) => (\n          <li key={data.imdbID}>\n            {data.Title} - {data.Year}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction App() {\n  const [title, setTitle] = useState(\"\");\n\n  return (\n    <>\n      <Search setTitle={setTitle} />\n      <Results title={title} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}